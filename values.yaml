USER-SUPPLIED VALUES:
affinity: {}
autoscaling:
  enabled: false
  maxReplicas: 100
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
fullnameOverride: ""
hyperswitch-app:
  initDB:
    enable: true
  loadBalancer:
    targetSecurityGroup: lg-security-group
  services:
    consumer:
      image: juspaydotin/hyperswitch-consumer:v1.107.0-standalone
    controlCenter:
      image: juspaydotin/hyperswitch-control-center:v1.29.9
    producer:
      image: juspaydotin/hyperswitch-producer:v1.107.0-standalone
    router:
      host: http://localhost:8080
      image: juspaydotin/hyperswitch-router:v1.107.0-standalone
      version: v1.107.0
    sdk:
      host: http://localhost:9090
      subversion: v0
      version: 0.27.2
hyperswitchCardVault:
  secrets:
    master_key: 7fe40608201400da9db95bb5cc090b2280405617a5ab42f2f6f94e6213d773e95585bf685f79bdc6368fc1e3aa7df984e3dafc6516bcee35bf64b52f
hyperswitchsdk:
  autoBuild:
    buildParam:
      envBackendUrl: http://localhost:8080
      envSdkUrl: http://localhost:9090
    forceBuild: true
    gitCloneParam:
      gitVersion: 0.27.2
    nginxConfig:
      extraPath: v0
  enabled: true
  ingress:
    annotations:
      alb.ingress.kubernetes.io/backend-protocol: HTTP
      alb.ingress.kubernetes.io/backend-protocol-version: HTTP1
      alb.ingress.kubernetes.io/group.name: hyperswitch-web-alb-ingress-group
      alb.ingress.kubernetes.io/ip-address-type: ipv4
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
      alb.ingress.kubernetes.io/load-balancer-name: hyperswitch-web
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/security-groups: lg-security-group
      alb.ingress.kubernetes.io/tags: stack=hyperswitch-lb
      alb.ingress.kubernetes.io/target-type: ip
    apiVersion: networking.k8s.io/v1
    className: alb
    enabled: true
    hosts:
    - http: null
      paths:
      - backend:
          service:
            name: hyperswitch-web
            port:
              number: 80
        path: /
        pathType: Prefix
  loadBalancer:
    targetSecurityGroup: loadbalancer-sg
  podAnnotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-5"
  service:
    port: 9090
image:
  pullPolicy: IfNotPresent
  repository: nginx
  tag: ""
imagePullSecrets: []
ingress:
  annotations: {}
  className: ""
  enabled: false
  hosts:
  - host: null
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
loadBalancer:
  targetSecurityGroup: lg-security-group
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
replicaCount: 1
resources: {}
securityContext: {}
service:
  port: 80
  type: ClusterIP
serviceAccount:
  annotations: {}
  automount: true
  create: true
  name: ""
services:
  router:
    host: http://localhost:8080
  sdk:
    host: http://localhost:9090
tolerations: []
volumeMounts: []
volumes: []
